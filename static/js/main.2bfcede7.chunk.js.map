{"version":3,"sources":["store/action-types.js","store/reducer.js","store/index.js","components/builder/toolbar/constants.js","components/builder/toolbar/tools.js","components/builder/toolbar/actions.js","components/builder/toolbar/index.js","components/builder/canvas/index.js","components/builder/customizer/index.js","components/builder/layers-list/index.js","components/builder/index.js","app.js","serviceWorker.js","index.js"],"names":["actions","ADD_LAYER","REMOVE_LAYER","UPDATE_LAYER","reducer","state","action","type","Object","objectSpread","layers","concat","toConsumableArray","payload","Store","React","createContext","initialState","TOOL_ITEMS","id","name","description","icon","Tools","_ref","addLayer","removeLayer","react_default","a","createElement","className","map","tool","key","onClick","data","uuid","handleAdd","title","CommonActions","Toolbar","_useContext","useContext","dispatch","console","log","tools","toolbar_actions","Canvas","item","Customizer","LayersList","Builder","builder_toolbar","builder_layers_list","builder_canvas","builder_customizer","App","components_builder","Boolean","window","location","hostname","match","ReactDOM","render","props","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","value","Provider","children","src_app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2bfcede7.chunk.js","sourcesContent":["const ADD_LAYER = \"ADD_LAYER\";\nconst REMOVE_LAYER = \"REMOVE_LAYER\";\nconst UPDATE_LAYER = \"UPDATE_LAYER\";\n\nconst actions = {\n  ADD_LAYER,\n  REMOVE_LAYER,\n  UPDATE_LAYER\n};\n\nexport default actions;\n","import actions from \"./action-types\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actions.ADD_LAYER:\n      return { ...state, layers: [...state.layers, action.payload] };\n    case actions.UPDATE_LAYER:\n      return { ...state, layers: action.payload };\n    case actions.REMOVE_LAYER:\n      return { ...state, layers: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React from \"react\";\nimport reducer from \"./reducer\";\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  layers: []\n};\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","export const TOOL_ITEMS = [\n  {\n    id: 1,\n    name: \"Title\",\n    description: \"Adds a Title block\",\n    icon: \"text_fields\"\n  },\n  {\n    id: 2,\n    name: \"Paragraph\",\n    description: \"Adds a Paragraph block\",\n    icon: \"notes\"\n  },\n  {\n    id: 3,\n    name: \"Image\",\n    description: \"Adds an Image block\",\n    icon: \"insert_photo\"\n  },\n  {\n    id: 4,\n    name: \"Form\",\n    description: \"Adds a form block\",\n    icon: \"insert_comment\"\n  },\n  {\n    id: 5,\n    name: \"Section\",\n    description: \"Adds a section block\",\n    icon: \"view_day\"\n  }\n];\n","import React from \"react\";\nimport uuid from \"uuidv4\";\nimport { TOOL_ITEMS } from \"./constants\";\n\nconst Tools = ({ addLayer, removeLayer }) => {\n  const handleAdd = (type, name) => {\n    const data = {\n      id: uuid(),\n      type,\n      name\n    };\n    addLayer(data);\n  };\n  return (\n    <ul className=\"toolbar-list\">\n      {TOOL_ITEMS.map(tool => (\n        <li className=\"toolbar-item\" key={tool.id}>\n          <button\n            className=\"toolbar-button\"\n            onClick={() => handleAdd(tool.type, tool.name)}\n            title={tool.name}\n          >\n            <i className=\"material-icons\">{tool.icon}</i> {tool.name}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Tools;\n","import React from \"react\";\n\nconst CommonActions = () => {\n  return (\n    <div className=\"toolbar-action\">\n      <button className=\"toolbar-button\">\n        <i className=\"material-icons\">undo</i> Undo\n      </button>\n      <button className=\"toolbar-button\">\n        <i className=\"material-icons\">redo</i> Redo\n      </button>\n      <button className=\"toolbar-button preview\">\n        <i className=\"material-icons\">visibility</i> Preview\n      </button>\n    </div>\n  );\n};\n\nexport default CommonActions;\n","import React, { useContext } from \"react\";\nimport Tools from \"./tools\";\nimport CommonActions from \"./actions\";\nimport { Store } from \"../../../store\";\nimport actions from \"../../../store/action-types\";\n\nimport \"./toolbar.scss\";\n\nfunction Toolbar() {\n  const { state, dispatch } = useContext(Store);\n  console.log(state);\n  const addLayer = data => {\n    return dispatch({\n      type: actions.ADD_LAYER,\n      payload: data\n    });\n  };\n  const removeLayer = id => {\n    return dispatch({\n      type: actions.REMOVE_LAYER,\n      payload: id\n    });\n  };\n  return (\n    <div className=\"toolbar\">\n      <Tools addLayer={addLayer} removeLayer={removeLayer} />\n      <CommonActions />\n    </div>\n  );\n}\n\nexport default Toolbar;\n","import React, { useContext } from \"react\";\nimport { Store } from \"../../../store\";\nimport \"./canvas.scss\";\n\nfunction Canvas() {\n  const {\n    state: { layers },\n    dispatch\n  } = useContext(Store);\n  return (\n    <div className=\"canvas\">\n      {layers.map(item => {\n        console.log(item);\n        return (\n          <div className=\"layer-item\" key={item.id}>\n            {item.name}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Canvas;\n","import React from \"react\";\nimport \"./customizer.scss\";\n\nfunction Customizer() {\n  return (\n    <div className=\"customizer\">\n      <p>Customizer</p>\n    </div>\n  );\n}\n\nexport default Customizer;\n","import React, { useContext } from \"react\";\nimport \"./layers-list.scss\";\nimport { Store } from \"../../../store\";\n\nfunction LayersList() {\n  const { state, dispatch } = useContext(Store);\n  return (\n    <div className=\"layers-list-container\">\n      <h3 className=\"title\">Layers</h3>\n      <ul className=\"layers-list\">\n        {state.layers.map(tool => (\n          <li className=\"layer-item\" key={tool.id}>\n            <button\n              onClick={() => {\n                console.log(\"Selected \", tool.name, \"tool\");\n              }}\n            >\n              {tool.name}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default LayersList;\n","import React from \"react\";\nimport Toolbar from \"./toolbar\";\nimport Canvas from \"./canvas\";\nimport Customizer from \"./customizer\";\nimport LayersList from \"./layers-list\";\nimport \"./builder.scss\";\n\nconst Builder = () => {\n  return (\n    <div className=\"builder\">\n      <div className=\"builder-header\">\n        <Toolbar />\n      </div>\n      <div className=\"builder-main\">\n        <LayersList />\n        <Canvas />\n        <Customizer />\n      </div>\n    </div>\n  );\n};\n\nexport default Builder;\n","import React from \"react\";\nimport Builder from \"./components/builder\";\nimport \"./app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header>Page Builder</header>\n      <main>\n        <Builder />\n      </main>\n      <footer>&copy; Page Builder 2019</footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { StoreProvider } from \"./store\";\nimport App from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}